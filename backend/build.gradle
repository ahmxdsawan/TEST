plugins {
    id 'java'
    id 'jvm-test-suite'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
    id 'checkstyle'
    id "org.sonarqube" version "5.1.0.4882"
}

group = 'com.example.cis4900.spring'
version = '1.0'
archivesBaseName="notes-app"


repositories {
    mavenCentral()
    jcenter()
}

jacoco {
        toolVersion = "0.8.11"
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'mysql:mysql-connector-java:8.0.11'
    runtimeOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

   testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.11.2' // Adding Mockito dependency for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1' // Adding JUnit 5 dependency for testing
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1' // Adding JUnit 5 engine for testing
    testRuntimeOnly 'com.h2database:h2' // Adding H2 dependency for testing

    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
}

testing {
    suites {
        test {
            // useJUnitPlatform()
            // finalizedBy jacocoTestReport // report is always generated after tests run

            targets {
                all {
                    testTask.configure {
                        useJUnitPlatform()
                        finalizedBy jacocoTestReport
                    }
                }
            }
        }

        integrationTest(JvmTestSuite) {
            // useJUnitPlatform()
            // finalizedBy jacocoTestReport // report is always generated after tests run

            targets {
                all {
                    testTask.configure {
                        useJUnitPlatform()
                        finalizedBy jacocoTestReport
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

 jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        csv.required = true
        xml.required = true
     }

 }

checkstyle {
    toolVersion '10.18.1'
    configFile file("config/checkstyle/checkstyle.xml")
}

sonar {
 properties {
   property "sonar.projectName","vodalytic_backend"
   property "sonar.projectKey","vodalytic_backend"
   property "sonar.qualitygate.wait", true 
   property "sonar.sources", "src/main/java"
   property "sonar.java.binaries", "build/classes/java/main"
 }
}